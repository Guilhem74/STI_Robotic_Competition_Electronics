#ifndef __List_variables__H
#define __List_variables__H
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "math.h"
#define PI 3.14159265359
/* Communication Variables*/
#define SIZE_UART 64 
uint8_t UART_RX_Analyse[SIZE_UART]=""; 
#define SIZE_BUFFER 8 
uint8_t BUFFER_RX[SIZE_BUFFER][SIZE_UART]; 
uint8_t BUFFER_TX[SIZE_BUFFER][SIZE_UART]; 
uint8_t Indice_Start_RX=0,Indice_Stop_RX=0; 
uint8_t Indice_Start_TX=0,Indice_Stop_TX=0; 
uint8_t BUFFER_RX_UART2[SIZE_BUFFER][SIZE_UART]; 
uint8_t BUFFER_TX_UART2[SIZE_BUFFER][SIZE_UART]; 
uint8_t Indice_Start_RX_UART2=0,Indice_Stop_RX_UART2=0; 
uint8_t Indice_Start_TX_UART2=0,Indice_Stop_TX_UART2=0; 


/* Robot localization Variables*/
int16_t Encoder_Right_Past=0,Encoder_Right=0,Encoder_Left_Past=0,Encoder_Left=0;
int32_t ANGLE_POS_RAD=0,X_POS_MM=0,Y_POS_MM=0;
int32_t ANGLE_POS_RAD_CACHE=0,X_POS_MM_CACHE=0,Y_POS_MM_CACHE=0;
int32_t ANGLE_DES_RAD=0,X_DES_MM=0,Y_DES_MM=0;
int32_t ANGLE_DES_RAD_CACHE=0,X_DES_MM_CACHE=0,Y_DES_MM_CACHE=0;
int8_t UPDATE_POS_PARAMETERS=0,UPDATE_DEST_PARAMETERS=0;
int8_t CONTROL_ENABLED=0, UPDATE_CONTROL_PARAMETERS=0;
int16_t TICS_2_MM=0,TICS_2_MM_CACHE=0;
int16_t SPACING_WHEELS=0,SPACING_WHEELS_CACHE=0;
int16_t FINAL_BOOL_DISTANCE_MM,FINAL_BOOL_DISTANCE_MM_CACHE=0;
/*Speed and acceleration profile*/
int16_t SPEED_MAX_DISTANCE_MM_S=0,SPEED_MAX_DISTANCE_MM_S_CACHE=0;
int16_t ACCELERATION_MAX_DISTANCE_MM_S2=0,ACCELERATION_MAX_DISTANCE_MM_S2_CACHE=0;
int16_t BRAKING_MAX_DISTANCE_MM_S2=0,BRAKING_MAX_DISTANCE_MM_S2_CACHE=0;
int16_t SPEED_MAX_ANGLE_MM_S=0,SPEED_MAX_ANGLE_MM_S_CACHE=0;
int16_t ACCELERATION_MAX_ANGLE_MM_S2=0,ACCELERATION_MAX_ANGLE_MM_S2_CACHE=0;
int16_t BRAKING_MAX_ANGLE_MM_S2=0,BRAKING_MAX_ANGLE_MM_S2_CACHE=0;
int16_t ANTICIPATION_PERCENTAGE=0,ANTICIPATION_PERCENTAGE_CACHE=0;
int16_t LOOP_CONTROL_TIMING=0;

/* PID CONTROL*/
int16_t P_DISTANCE=0,P_DISTANCE_CACHE=0;
int16_t I_DISTANCE=0,I_DISTANCE_CACHE=0;
int16_t D_DISTANCE=0,D_DISTANCE_CACHE=0;
int16_t P_ANGLE=0,P_ANGLE_CACHE=0;
int16_t I_ANGLE=0,I_ANGLE_CACHE=0;
int16_t D_ANGLE=0,D_ANGLE_CACHE=0;
#endif
